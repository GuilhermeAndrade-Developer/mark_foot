version: '3.8'

services:
  # MySQL Database
  mysql_db:
    image: mysql:8.0
    container_name: mark_foot_mysql_dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: mark_foot_db_dev
      MYSQL_USER: mark_foot_user
      MYSQL_PASSWORD: mark_foot_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ../database/init:/docker-entrypoint-initdb.d
    networks:
      - mark_foot_dev_network

  # Redis Cache and Message Broker
  redis_cache:
    image: redis:7-alpine
    container_name: mark_foot_redis_dev
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - mark_foot_dev_network

  # Web Service (Django Frontend) - Development
  web-service-dev:
    build:
      context: ../services/web-service
      dockerfile: Dockerfile
    container_name: mark_foot_web_dev
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - DEBUG=1
      - DB_HOST=mysql_db
      - DB_PORT=3306
      - DB_NAME=mark_foot_db_dev
      - DB_USER=mark_foot_user
      - DB_PASSWORD=mark_foot_password
      - REDIS_URL=redis://redis_cache:6379/0
    volumes:
      - ../services/web-service:/app
      - ../shared:/app/shared
      - ../storage:/app/storage
    depends_on:
      - mysql_db
      - redis_cache
    networks:
      - mark_foot_dev_network
    command: python manage.py runserver 0.0.0.0:8000

  # Celery Worker for Background Tasks
  celery-worker-dev:
    build:
      context: ../services/web-service
      dockerfile: Dockerfile
    container_name: mark_foot_celery_worker_dev
    restart: unless-stopped
    environment:
      - DEBUG=1
      - DB_HOST=mysql_db
      - DB_PORT=3306
      - DB_NAME=mark_foot_db_dev
      - DB_USER=mark_foot_user
      - DB_PASSWORD=mark_foot_password
      - REDIS_URL=redis://redis_cache:6379/0
    volumes:
      - ../services/web-service:/app
      - ../shared:/app/shared
      - ../storage:/app/storage
    depends_on:
      - mysql_db
      - redis_cache
    networks:
      - mark_foot_dev_network
    command: celery -A mark_foot_backend worker --loglevel=info

  # Celery Beat Scheduler
  celery-beat-dev:
    build:
      context: ../services/web-service
      dockerfile: Dockerfile
    container_name: mark_foot_celery_beat_dev
    restart: unless-stopped
    environment:
      - DEBUG=1
      - DB_HOST=mysql_db
      - DB_PORT=3306
      - DB_NAME=mark_foot_db_dev
      - DB_USER=mark_foot_user
      - DB_PASSWORD=mark_foot_password
      - REDIS_URL=redis://redis_cache:6379/0
    volumes:
      - ../services/web-service:/app
      - ../shared:/app/shared
      - ../storage:/app/storage
    depends_on:
      - mysql_db
      - redis_cache
      - celery-worker-dev
    networks:
      - mark_foot_dev_network
    command: celery -A mark_foot_backend beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler

  # Frontend Service (Vue.js) - Development
  frontend-dev:
    build:
      context: ../services/frontend
      dockerfile: Dockerfile
    container_name: mark_foot_frontend_dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8001/api/v1
    volumes:
      - ../services/frontend:/app
      - /app/node_modules
    networks:
      - mark_foot_dev_network
    command: npm run dev

volumes:
  mysql_dev_data:
  redis_dev_data:

networks:
  mark_foot_dev_network:
    driver: bridge
