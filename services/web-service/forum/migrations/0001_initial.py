# Generated by Django 4.2 on 2025-08-28 22:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ForumCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('category_type', models.CharField(choices=[('team', 'Time'), ('competition', 'Liga/Competição'), ('general', 'Discussão Geral'), ('news', 'Notícias'), ('analysis', 'Análises')], default='general', max_length=20, verbose_name='Tipo de Categoria')),
                ('team_id', models.IntegerField(blank=True, null=True, verbose_name='ID do Time')),
                ('competition_id', models.IntegerField(blank=True, null=True, verbose_name='ID da Competição')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_moderated', models.BooleanField(default=False, verbose_name='Moderado')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('topic_count', models.IntegerField(default=0, verbose_name='Total de Tópicos')),
                ('post_count', models.IntegerField(default=0, verbose_name='Total de Posts')),
            ],
            options={
                'verbose_name': 'Categoria do Fórum',
                'verbose_name_plural': 'Categorias do Fórum',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ForumUserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_posts', models.IntegerField(default=0, verbose_name='Total de Posts')),
                ('total_topics', models.IntegerField(default=0, verbose_name='Total de Tópicos')),
                ('reputation_score', models.IntegerField(default=0, verbose_name='Pontuação de Reputação')),
                ('signature', models.TextField(blank=True, max_length=500, verbose_name='Assinatura')),
                ('receive_notifications', models.BooleanField(default=True, verbose_name='Receber Notificações')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='Entrou em')),
                ('last_seen', models.DateTimeField(auto_now=True, verbose_name='Visto por último')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='forum_profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Perfil do Usuário no Fórum',
                'verbose_name_plural': 'Perfis dos Usuários no Fórum',
            },
        ),
        migrations.CreateModel(
            name='ForumTopic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='Título')),
                ('slug', models.SlugField(max_length=200, verbose_name='Slug')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('status', models.CharField(choices=[('open', 'Aberto'), ('closed', 'Fechado'), ('pinned', 'Fixo'), ('locked', 'Bloqueado')], default='open', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('last_activity', models.DateTimeField(auto_now_add=True, verbose_name='Última Atividade')),
                ('view_count', models.IntegerField(default=0, verbose_name='Visualizações')),
                ('post_count', models.IntegerField(default=0, verbose_name='Total de Posts')),
                ('tags', models.CharField(blank=True, max_length=500, verbose_name='Tags')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_topics', to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='forum.forumcategory', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Tópico do Fórum',
                'verbose_name_plural': 'Tópicos do Fórum',
                'ordering': ['-last_activity'],
                'unique_together': {('category', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='ForumPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(validators=[django.core.validators.MinLengthValidator(10)], verbose_name='Conteúdo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('is_edited', models.BooleanField(default=False, verbose_name='Editado')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Deletado')),
                ('is_reported', models.BooleanField(default=False, verbose_name='Reportado')),
                ('position', models.IntegerField(default=1, verbose_name='Posição')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_posts', to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='forum.forumpost', verbose_name='Post Pai')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='forum.forumtopic', verbose_name='Tópico')),
            ],
            options={
                'verbose_name': 'Post do Fórum',
                'verbose_name_plural': 'Posts do Fórum',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ForumVote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vote_type', models.CharField(choices=[('upvote', 'Positivo'), ('downvote', 'Negativo')], max_length=10, verbose_name='Tipo de Voto')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='forum.forumpost', verbose_name='Post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_votes', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Voto do Fórum',
                'verbose_name_plural': 'Votos do Fórum',
                'unique_together': {('post', 'user')},
            },
        ),
    ]
