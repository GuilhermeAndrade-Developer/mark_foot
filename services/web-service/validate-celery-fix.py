#!/usr/bin/env python3
"""
Script de valida√ß√£o para verificar se as corre√ß√µes do Celery Beat est√£o funcionando.
"""
import sys
import time
import subprocess
import MySQLdb
from decouple import config

def check_database_connection():
    """Verifica se consegue conectar ao banco de dados."""
    try:
        db_host = config('DB_HOST', default='mysql_db')
        db_port = config('DB_PORT', default='3306')
        db_name = config('DB_NAME', default='mark_foot_db_dev')
        db_user = config('DB_USER', default='mark_foot_user')
        db_password = config('DB_PASSWORD', default='mark_foot_password')
        
        conn = MySQLdb.connect(
            host=db_host,
            port=int(db_port),
            user=db_user,
            passwd=db_password,
            db=db_name
        )
        
        cursor = conn.cursor()
        cursor.execute("SHOW TABLES LIKE 'django_celery_beat_periodictask'")
        result = cursor.fetchone()
        
        conn.close()
        
        if result:
            print("‚úÖ Tabela django_celery_beat_periodictask encontrada!")
            return True
        else:
            print("‚ùå Tabela django_celery_beat_periodictask n√£o encontrada!")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro na conex√£o com o banco: {e}")
        return False

def check_celery_beat_process():
    """Verifica se o processo do Celery Beat est√° funcionando."""
    try:
        # Verifica se consegue importar o Celery e suas configura√ß√µes
        import celery
        from mark_foot_backend.celery import app
        
        print("‚úÖ Celery configurado corretamente!")
        return True
            
    except Exception as e:
        print(f"‚ùå Erro ao verificar Celery: {e}")
        return False

def run_validation():
    """Executa todas as valida√ß√µes."""
    print("üîç Iniciando valida√ß√£o das corre√ß√µes do Celery Beat...")
    print("-" * 50)
    
    # Teste 1: Conex√£o com banco
    print("1. Verificando conex√£o com banco de dados...")
    db_ok = check_database_connection()
    
    # Teste 2: Processo Celery Beat
    print("\n2. Verificando processo Celery Beat...")
    process_ok = check_celery_beat_process()
    
    # Resultado final
    print("\n" + "=" * 50)
    if db_ok and process_ok:
        print("‚úÖ SUCESSO: Todas as valida√ß√µes passaram!")
        print("‚úÖ As corre√ß√µes est√£o funcionando corretamente.")
        return True
    else:
        print("‚ùå FALHA: Algumas valida√ß√µes falharam!")
        print("‚ùå Verifique os logs para mais detalhes.")
        return False

if __name__ == "__main__":
    success = run_validation()
    sys.exit(0 if success else 1)
