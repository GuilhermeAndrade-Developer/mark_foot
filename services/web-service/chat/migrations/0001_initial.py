# Generated by Django 4.2 on 2025-08-28 13:45

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0002_player_playertransfer_playerstatistics_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatEmoji',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('unicode_code', models.CharField(blank=True, max_length=20)),
                ('image_url', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'chat_emojis',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('guest_name', models.CharField(blank=True, help_text='Name for guest users', max_length=50)),
                ('content', models.TextField(max_length=500, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(500)])),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('emoji', 'Emoji Only'), ('system', 'System Message'), ('admin', 'Admin Message')], default='text', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('hidden', 'Hidden'), ('deleted', 'Deleted'), ('flagged', 'Flagged')], default='active', max_length=20)),
                ('is_flagged', models.BooleanField(default=False)),
                ('flag_count', models.PositiveIntegerField(default=0)),
                ('auto_flagged', models.BooleanField(default=False, help_text='Flagged by automatic moderation')),
                ('moderated_at', models.DateTimeField(blank=True, null=True)),
                ('moderation_reason', models.CharField(blank=True, max_length=200)),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('reports_count', models.PositiveIntegerField(default=0)),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('room_type', models.CharField(choices=[('match', 'Match Chat'), ('team', 'Team Chat'), ('general', 'General Chat'), ('admin', 'Admin Chat')], default='general', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('archived', 'Archived'), ('maintenance', 'Maintenance')], default='active', max_length=20)),
                ('max_users', models.PositiveIntegerField(default=1000, help_text='Maximum concurrent users')),
                ('rate_limit_messages', models.PositiveIntegerField(default=5, help_text='Messages per minute per user')),
                ('auto_moderation', models.BooleanField(default=True, help_text='Enable automatic moderation')),
                ('allow_guests', models.BooleanField(default=False, help_text='Allow non-authenticated users')),
                ('profanity_filter', models.BooleanField(default=True)),
                ('spam_detection', models.BooleanField(default=True)),
                ('link_filter', models.BooleanField(default=True)),
                ('emoji_only_mode', models.BooleanField(default=False)),
                ('total_messages', models.PositiveIntegerField(default=0)),
                ('peak_concurrent_users', models.PositiveIntegerField(default=0)),
                ('total_unique_users', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_chat_rooms', to=settings.AUTH_USER_MODEL)),
                ('match', models.OneToOneField(blank=True, help_text='Related match for match-specific chats', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_room', to='core.match')),
                ('team', models.ForeignKey(blank=True, help_text='Related team for team-specific chats', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_rooms', to='core.team')),
            ],
            options={
                'db_table': 'chat_rooms',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatUserSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('guest_id', models.CharField(blank=True, help_text='Session ID for guest users', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=500)),
                ('messages_sent', models.PositiveIntegerField(default=0)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_sessions', to='chat.chatroom')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_user_sessions',
            },
        ),
        migrations.CreateModel(
            name='ChatReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reason', models.CharField(choices=[('spam', 'Spam'), ('harassment', 'Harassment'), ('hate_speech', 'Hate Speech'), ('inappropriate', 'Inappropriate Content'), ('off_topic', 'Off Topic'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewed', 'Reviewed'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='chat.chatmessage')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_reports', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_chat_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_reports',
            },
        ),
        migrations.CreateModel(
            name='ChatModeration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('warn', 'Warning'), ('timeout', 'Timeout'), ('kick', 'Kick'), ('ban', 'Ban'), ('message_delete', 'Delete Message'), ('message_edit', 'Edit Message')], max_length=20)),
                ('reason', models.CharField(max_length=200)),
                ('duration_minutes', models.PositiveIntegerField(blank=True, help_text='Duration for timeouts/bans in minutes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions', to='chat.chatroom')),
                ('target_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions', to='chat.chatmessage')),
                ('target_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_moderation_actions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_moderation',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.chatroom'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ChatBannedUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ban_type', models.CharField(choices=[('room', 'Room Ban'), ('global', 'Global Ban'), ('temporary', 'Temporary Ban')], default='room', max_length=20)),
                ('reason', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Leave blank for permanent ban', null=True)),
                ('banned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issued_chat_bans', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='banned_users', to='chat.chatroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_bans', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'chat_banned_users',
            },
        ),
        migrations.AddIndex(
            model_name='chatusersession',
            index=models.Index(fields=['room', 'is_active'], name='chat_user_s_room_id_c5bceb_idx'),
        ),
        migrations.AddIndex(
            model_name='chatusersession',
            index=models.Index(fields=['user', '-joined_at'], name='chat_user_s_user_id_a31034_idx'),
        ),
        migrations.AddIndex(
            model_name='chatusersession',
            index=models.Index(fields=['last_activity'], name='chat_user_s_last_ac_dd974e_idx'),
        ),
        migrations.AddIndex(
            model_name='chatusersession',
            index=models.Index(fields=['is_active'], name='chat_user_s_is_acti_d39281_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatusersession',
            unique_together={('room', 'guest_id'), ('room', 'user')},
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['room_type', 'status'], name='chat_rooms_room_ty_104db8_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['match'], name='chat_rooms_match_i_d46b33_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['team'], name='chat_rooms_team_id_4bd4a0_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['created_at'], name='chat_rooms_created_108bfd_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['status'], name='chat_rooms_status_0c6d66_idx'),
        ),
        migrations.AddIndex(
            model_name='chatreport',
            index=models.Index(fields=['message', '-created_at'], name='chat_report_message_34c3f4_idx'),
        ),
        migrations.AddIndex(
            model_name='chatreport',
            index=models.Index(fields=['reporter', '-created_at'], name='chat_report_reporte_4ae328_idx'),
        ),
        migrations.AddIndex(
            model_name='chatreport',
            index=models.Index(fields=['status'], name='chat_report_status_10e576_idx'),
        ),
        migrations.AddIndex(
            model_name='chatreport',
            index=models.Index(fields=['reason'], name='chat_report_reason_5e7350_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatreport',
            unique_together={('reporter', 'message')},
        ),
        migrations.AddIndex(
            model_name='chatmoderation',
            index=models.Index(fields=['room', '-created_at'], name='chat_modera_room_id_5cc94c_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmoderation',
            index=models.Index(fields=['moderator', '-created_at'], name='chat_modera_moderat_f38fc6_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmoderation',
            index=models.Index(fields=['target_user', '-created_at'], name='chat_modera_target__e659a2_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmoderation',
            index=models.Index(fields=['action_type'], name='chat_modera_action__ff770b_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmoderation',
            index=models.Index(fields=['is_active', 'expires_at'], name='chat_modera_is_acti_0b9115_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['room', '-created_at'], name='chat_messag_room_id_584819_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['user', '-created_at'], name='chat_messag_user_id_790302_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['status'], name='chat_messag_status_d794a2_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['is_flagged'], name='chat_messag_is_flag_33967f_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['created_at'], name='chat_messag_created_eb4133_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['message_type'], name='chat_messag_message_b8fb34_idx'),
        ),
        migrations.AddIndex(
            model_name='chatbanneduser',
            index=models.Index(fields=['user', 'is_active'], name='chat_banned_user_id_554b54_idx'),
        ),
        migrations.AddIndex(
            model_name='chatbanneduser',
            index=models.Index(fields=['room', 'is_active'], name='chat_banned_room_id_9cfb66_idx'),
        ),
        migrations.AddIndex(
            model_name='chatbanneduser',
            index=models.Index(fields=['ban_type'], name='chat_banned_ban_typ_dcbc0f_idx'),
        ),
        migrations.AddIndex(
            model_name='chatbanneduser',
            index=models.Index(fields=['expires_at'], name='chat_banned_expires_578d4d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatbanneduser',
            unique_together={('user', 'room')},
        ),
    ]
